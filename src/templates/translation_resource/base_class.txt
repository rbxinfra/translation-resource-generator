//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This file was generated by the tool {{ .ToolName }}.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//
namespace {{ .GlobalNamespace }}.TranslationResources.{{ .Namespace }};

/// <summary>
///  A strongly-typed resource class, for looking up localized strings, etc.
/// </summary>
internal class {{ .Name }}Resources_en_us : 
    global::{{ .GlobalNamespace }}.TranslationResources.TranslationResourcesBase,
    global::{{ .GlobalNamespace }}.TranslationResources.{{ .Namespace }}.I{{ .Name }}Resources
{
    private readonly global::System.Lazy<global::System.Collections.Generic.IReadOnlyDictionary<string, string>> _AllKeys;

    /// <summary>
    ///  Initializes a new instance of the <see cref="{{ .Name }}Resources_en_us"/> class.
    /// </summary>
    /// <param name="state">The state.</param>
    public {{ .Name }}Resources_en_us(global::{{ .GlobalNamespace }}.TranslationResources.TranslationResourceState state)
        : base(state)
    {
        _AllKeys = new global::System.Lazy<global::System.Collections.Generic.IReadOnlyDictionary<string, string>>(
            () => 
            {
                var allKeys = new global::System.Collections.Generic.Dictionary<string, string>();
                {{- range $key, $value := .Strings }}
                allKeys.Add("{{ $key }}", _GetTemplateFor{{ $key | makeSafe }}());
                {{- end }}

                return allKeys;
            }
        );
    }

    /// <inheritdoc cref="{{ .GlobalNamespace }}.TranslationResources.ITranslationResources.GetAllKeys"/>
    public global::System.Collections.Generic.IReadOnlyDictionary<string, string> GetAllKeys() => _AllKeys.Value;

    /// <inheritdoc cref="{{ .GlobalNamespace }}.TranslationResources.ITranslationResources.GetFullContentNamespaceName"/>
    public string GetFullContentNamespaceName() => "{{ .Namespace }}.{{ .Name }}";

{{ range $key, $value := .Strings }}
{{- if $value.Parameters }}
    /// <summary>
    /// Key: "{{ $key }}"{{ if $value.Description }}
    /// {{ $value.Description | fixDescription | xmlEncode }}{{ end }}
    /// English String: "{{ $value.EnglishString | escapeNewlines | xmlEncode }}"
    /// </summary>
    public virtual string {{ $key | makeSafe }}({{ $value.Parameters }})
        => string.Format("{{ $value.FormatString | escapeQuotes }}", {{ $value.FormatArguments }});
{{ else }}
    /// <summary>
    /// Key: "{{ $key }}"{{ if $value.Description }}
    /// {{ $value.Description | fixDescription | xmlEncode }}{{ end }}
    /// English String: "{{ $value.EnglishString | escapeNewlines | xmlEncode }}"
    /// </summary>
    public virtual string {{ $key | makeSafe }} => "{{ $value.EnglishString | escapeQuotes }}";
{{ end }}
    /// <summary>
    /// Gets the template for "{{ $key }}".
    /// </summary>
    protected virtual string _GetTemplateFor{{ $key | makeSafe }}() => "{{ $value.EnglishString | escapeQuotes }}";
{{ end }}
}
